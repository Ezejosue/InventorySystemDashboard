{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "ba2f88513b5f6d9f04554acafeaaa2ac",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "93f351bf6772f61fa80b47d8b7b531f5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category for electronic items"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "operationId": "554c1c4fb0cbf318d3079ba7e84d38dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "operationId": "3cbc0d5fc107a29ea3a9b67c220746c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated category for electronic items"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "6b203a9d1a8c8aa75716dc24525d8c84",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "description": "Returns a list of all clients",
                "operationId": "getAllClients",
                "responses": {
                    "200": {
                        "description": "A list of clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Stores a new client in the database",
                "operationId": "storeClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/{username}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a client by username",
                "description": "Returns a single client by username",
                "operationId": "getClientByUsername",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The username of the client",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clients/{id}": {
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update a client",
                "description": "Updates an existing client in the database",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the client",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "description": "Returns a list of all products",
                "operationId": "getAllProducts",
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product stock",
                "description": "Updates the stock quantity of a product",
                "operationId": "updateStock",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productID": {
                                        "description": "The ID of the product",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "newQuantity": {
                                        "description": "The new quantity of the product",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "movementType": {
                                        "description": "The type of stock movement",
                                        "type": "string",
                                        "example": "entry or exit"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stock updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stock updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a new product",
                "description": "Creates a new product in the database",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{productName}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by name",
                "description": "Returns a product by its name",
                "operationId": "getProductByName",
                "parameters": [
                    {
                        "name": "productName",
                        "in": "path",
                        "description": "The name of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "154f0378a5032cc055c841baa150ba70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "stock",
                                    "category_id",
                                    "supplier_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Product Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Product Description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "supplier_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get all sales",
                "description": "Returns a list of all sales",
                "operationId": "getAllSales",
                "responses": {
                    "200": {
                        "description": "A list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sale"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Register a new sale",
                "description": "Registers a new sale in the database",
                "operationId": "registerSale",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "The ID of the client making the purchase",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "The ID of the product being purchased",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "quantity": {
                                        "description": "The quantity of the product being purchased",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sale registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/{id}": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get a sale by ID",
                "description": "Returns a single sale by ID",
                "operationId": "getSaleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sale"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Sales"
                ],
                "summary": "Update a sale",
                "description": "Updates an existing sale in the database",
                "operationId": "updateSale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "The ID of the client making the purchase",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "description": "The ID of the product being purchased",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "quantity": {
                                        "description": "The quantity of the product being purchased",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sale updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sales"
                ],
                "summary": "Delete a sale",
                "description": "Deletes a sale from the database",
                "operationId": "deleteSale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the sale",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/suppliers": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get all suppliers",
                "description": "Returns a list of all suppliers",
                "operationId": "getAllSuppliers",
                "responses": {
                    "200": {
                        "description": "A list of suppliers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Supplier"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Create a new supplier",
                "description": "Stores a new supplier in the database",
                "operationId": "storeSupplier",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Supplier created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/suppliers/{id}": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Get a supplier by ID",
                "description": "Returns a single supplier by ID",
                "operationId": "getSupplierById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Update a supplier",
                "description": "Updates an existing supplier in the database",
                "operationId": "updateSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Supplier updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete a supplier",
                "description": "Deletes a supplier from the database",
                "operationId": "deleteSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the supplier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Supplier deleted"
                    },
                    "404": {
                        "description": "Supplier not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "operationId": "45fc269b0725cafc1d4e444a1ace24cd",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "1a63883edb751cb640a2f6f516236f49",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/users/{email}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by email",
                "operationId": "50327ddc13d668f2cc3e984535191667",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "operationId": "e169ebcc01eeee2f5e57e5bfc064bc7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProductListDTO": {
                "title": "Product List DTO",
                "description": "Data transfer object for listing products",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the product",
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "This is a sample product"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "stock": {
                        "description": "The stock quantity of the product",
                        "type": "integer",
                        "example": 50
                    },
                    "category_name": {
                        "description": "The name of the category",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "supplier_name": {
                        "description": "The name of the supplier",
                        "type": "string",
                        "example": "Supplier Inc."
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the category",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Client": {
                "title": "Client",
                "description": "Client model",
                "required": [
                    "username",
                    "password",
                    "email",
                    "name",
                    "phone"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the client",
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "description": "The username of the client",
                        "type": "string",
                        "example": "john_doe"
                    },
                    "password": {
                        "description": "The password of the client",
                        "type": "string",
                        "writeOnly": true,
                        "example": "password123"
                    },
                    "email": {
                        "description": "The email address of the client",
                        "type": "string",
                        "example": "john_doe@example.com"
                    },
                    "name": {
                        "description": "The full name of the client",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone": {
                        "description": "The phone number of the client",
                        "type": "string",
                        "example": "123-456-7890"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "required": [
                    "name",
                    "price",
                    "stock",
                    "category_id",
                    "supplier_id"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the product",
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "This is a sample product"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "stock": {
                        "description": "The stock quantity of the product",
                        "type": "integer",
                        "example": 50
                    },
                    "category_id": {
                        "description": "The category ID of the product",
                        "type": "integer",
                        "example": 2
                    },
                    "supplier_id": {
                        "description": "The supplier ID of the product",
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "Sale": {
                "title": "Sale",
                "description": "Sale model",
                "required": [
                    "client_id",
                    "product_id",
                    "quantity",
                    "total_price",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the sale",
                        "type": "integer",
                        "example": 1
                    },
                    "client_id": {
                        "description": "The ID of the client associated with the sale",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "The ID of the product associated with the sale",
                        "type": "integer",
                        "example": 2
                    },
                    "quantity": {
                        "description": "The quantity of the product sold",
                        "type": "integer",
                        "example": 3
                    },
                    "total_price": {
                        "description": "The total price of the sale",
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "date": {
                        "description": "The date and time of the sale",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "Supplier": {
                "title": "Supplier",
                "description": "Supplier model",
                "required": [
                    "name",
                    "phone",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the supplier",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the supplier",
                        "type": "string",
                        "example": "Supplier Name"
                    },
                    "phone": {
                        "description": "The phone number of the supplier",
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "email": {
                        "description": "The email of the supplier",
                        "type": "string",
                        "example": "supplier@example.com"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "description": "Its the name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}